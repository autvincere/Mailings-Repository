[{"/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/App.js":"1","/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/pages/homepage.component.js":"2","/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/components/signIn.component.jsx":"3","/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/components/Listas.component.jsx":"4","/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/firebase/firebase.utils.js":"5","/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/themeConfig.js":"6","/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/components/Nav.component.jsx":"7","/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/components/BoxMenu.component.jsx":"8","/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/pages/mails.component.js":"9","/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/components/Navbar.component.jsx":"10","/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/index.js":"11"},{"size":1381,"mtime":1611690210040,"results":"12","hashOfConfig":"13"},{"size":1049,"mtime":1611721008217,"results":"14","hashOfConfig":"13"},{"size":8789,"mtime":1611752464832,"results":"15","hashOfConfig":"13"},{"size":1508,"mtime":1611590055471,"results":"16","hashOfConfig":"13"},{"size":678,"mtime":1611678928846,"results":"17","hashOfConfig":"13"},{"size":115,"mtime":1611346437186,"results":"18","hashOfConfig":"13"},{"size":1079,"mtime":1611719122653,"results":"19","hashOfConfig":"13"},{"size":960,"mtime":1611590187320,"results":"20","hashOfConfig":"13"},{"size":1783,"mtime":1611721132454,"results":"21","hashOfConfig":"13"},{"size":3714,"mtime":1611720776408,"results":"22","hashOfConfig":"13"},{"size":271,"mtime":1611344802442,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"akqfiy",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/App.js",[],["50","51"],"/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/pages/homepage.component.js",[],"/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/components/signIn.component.jsx",["52"],"import React, { useState } from 'react'\n\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ReactComponent as Logo } from '../assets/vmlyr.svg'\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport SendIcon from '@material-ui/icons/Send';\nimport Chip from '@material-ui/core/Chip';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nimport { auth } from '../firebase/firebase.utils'\n\nimport { withRouter } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n     paper: {\n          width: '50%',\n          overflow: 'hidden',\n          [theme.breakpoints.down('sm')]: {\n               width: '90%',\n               marginTop:'160px',\n          },\n     },\n     contentLogo: {\n          backgroundColor: '#000000',\n          height: '400px',\n          width: '300px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          [theme.breakpoints.down('sm')]: {\n               width: '100%',\n               height: '200px',\n          },\n     },\n     vmlyr: {\n          overflow: 'inherit',\n          color: '#ffffff',\n          fontSize: '4em',\n          maxWidth: '400px',\n          width: '250px',\n          alignItems: 'center',\n          justifyContent: 'center'\n     },\n     contentForm: {\n          backgroundColor: '#ffffff',\n          height: '400px',\n          width: '20vw',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          [theme.breakpoints.down('sm')]: {\n               width: '90%',\n          },\n     },\n     button: {\n          marginTop: '20px',\n          width: '96%'\n     },\n     chipError: {\n          margin: '6px 0px 9px 32px'\n     },\n     chipGeneral: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginTop: '13px'\n     }\n}))\n\nconst SignIn = (props) => {\n\n     const classes = useStyles();\n\n     const [user, setUser] = useState({\n          email: 'aut.vincere@gmail.com'\n         ,password: 'prolam2021'\n     })\n     let { email, password } = user;\n\n     const [errorGeneral, setErrorGeneral] = useState(null)\n     const [errorMail, setErrorMail] = useState(null)\n     const [ errorPassword, setErrorPassword ] = useState(null)\n     const updateStateUser = e => {\n          // console.log(e.target.name);\n          setUser({\n               ...user,\n               [e.target.name]: e.target.value\n          })\n     }\n\n     const submitLogin = (e) => {\n          e.preventDefault();\n          console.log(email);\n\n          //Validar\n          if (!email.trim() || !password.trim()) {\n               console.log('ingresa campo');\n               setErrorGeneral('Ingrese todos los datos porfavor')\n               return\n          }\n          if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n               console.log('mail invalido');\n               setErrorMail('email invalido')\n               return\n          } else {\n               setErrorMail(null)\n          }\n\n          setErrorGeneral(false)\n          console.log('Todos los campos son validos');\n\n         \n\n          login()\n          // setUser({\n          //      email: '',\n          //      password: ''\n          // })\n\n     }\n\n     const login = async () => {\n          try {\n               const res = await auth.signInWithEmailAndPassword(email, password)\n               console.log(res.user);\n               props.history.push('/mails')\n\n          } catch (error) {\n               console.log(error);\n               if (error.code === 'auth/invalid-email') {\n                    errorMail('Email no v치lido')\n                    console.log('Email no v치lido')\n                    return\n               }\n               if (error.code === 'auth/wrong-password') {\n                    setErrorPassword('Constrase침a Equivocada')\n                    console.log('Constrase침a Equivocada')\n                    return\n               }\n          }\n     }\n\n\n     return (\n          <Paper elevation={3} className={classes.paper}>\n               <Grid container spacing={3}>\n                    <Grid spacing={0} sm={6} xs={12} >\n                         <Box component=\"div\" className={classes.contentLogo} >\n                              <Logo className={classes.vmlyr} />\n                         </Box>\n                    </Grid>\n                    <Grid spacing={0} sm={6} xs={12}>\n                         <Box component=\"div\" className={classes.contentForm}>\n\n                              <form\n                                   // style={{ width: '600px' }}\n                                   onSubmit={submitLogin}>\n                                   \n                                   <Grid container spacing={1} alignItems=\"flex-end\" fullWidth>\n                                        <Grid item>\n                                             <AccountCircle />\n                                        </Grid>\n                                        <Grid item style={{ display: 'flex', flexGrow: '1' }}>\n                                             <TextField\n                                                  label=\"Email\"\n                                                  name=\"email\"\n                                                  style={{ width: '90%' }}\n                                                  value={email}\n                                                  onChange={updateStateUser}\n                                                  />\n                                        </Grid>\n                                        {\n                                             errorMail && <Chip\n                                                  className={classes.chipError}\n                                                  color=\"secondary\"\n                                                  label={ errorMail }\n                                                  icon={<HighlightOffIcon />}\n                                             />\n                                        }\n\n                                   </Grid>\n\n                                   <Grid container spacing={1} alignItems=\"flex-end\" >\n                                        <Grid item>\n                                             <LockIcon />\n                                        </Grid>\n                                        <Grid item>\n                                             <TextField\n                                                  label=\"Password\"\n                                                  name=\"password\"\n                                                  style={{ width: '110%' }}\n                                                  value={password}\n                                                  onChange={updateStateUser}\n                                             />\n                                        </Grid>\n                                        {\n                                             errorPassword && <Chip\n                                                  className={classes.chipError}\n                                                  color=\"secondary\"\n                                                  label={errorPassword}\n                                                  icon={<HighlightOffIcon />}\n                                             />\n                                        }\n                                   </Grid>\n                                   <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.button}\n                                        endIcon={<SendIcon />}\n                                        type=\"submit\"\n                                   >\n                                        Send\n                                   </Button>\n                                   {\n                                             errorGeneral && <Chip\n                                                  className={classes.chipGeneral}\n                                                  color=\"secondary\"\n                                                  label={errorGeneral}\n                                             />\n                                        }\n                              </form>\n                         </Box>\n                    </Grid>\n               </Grid>\n\n          </Paper>\n     )\n}\n\nexport default withRouter(SignIn)\n","/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/components/Listas.component.jsx",[],"/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/firebase/firebase.utils.js",[],["53","54"],"/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/themeConfig.js",[],"/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/components/Nav.component.jsx",[],"/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/components/BoxMenu.component.jsx",[],["55","56"],"/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/pages/mails.component.js",[],"/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/components/Navbar.component.jsx",[],"/Users/palmae/Documents/Pruebas/react/Mailings-Repository/src/index.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":19},{"ruleId":"57","replacedBy":"65"},{"ruleId":"59","replacedBy":"66"},{"ruleId":"57","replacedBy":"67"},{"ruleId":"59","replacedBy":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar",["69"],["70"],["69"],["70"],"no-global-assign","no-unsafe-negation"]